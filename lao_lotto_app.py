import streamlit as st
import pandas as pd
from collections import Counter
import random

st.set_page_config(page_title="‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß AI", layout="centered")
st.title("üá±üá¶ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏î‡πâ‡∏ß‡∏¢ AI")
st.caption("‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß 4 ‡∏´‡∏•‡∏±‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πà‡∏ô ‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß ‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß ‡∏™‡∏µ‡πà‡∏ï‡∏±‡∏ß")

if "lao_lotto" not in st.session_state:
    st.session_state.lao_lotto = []

# üßæ ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
st.subheader("üì• ‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ö‡∏ö‡∏ä‡∏∏‡∏î")
bulk_input = st.text_area("‡∏ß‡∏≤‡∏á‡∏ú‡∏•‡∏´‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô 1234\n4567\n7890", height=120)
if st.button("üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
    added = 0
    for line in bulk_input.strip().split("\n"):
        num = line.strip()
        if num.isdigit() and len(num) == 4:
            st.session_state.lao_lotto.append(num)
            added += 1
    st.success(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß {added} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

# ‚úèÔ∏è ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡∏á‡∏ß‡∏î
st.subheader("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 1 ‡∏á‡∏ß‡∏î (4 ‡∏´‡∏•‡∏±‡∏Å)")
cols = st.columns(4)
d1 = cols[0].text_input("‡∏´‡∏•‡∏±‡∏Å‡∏û‡∏±‡∏ô", max_chars=1)
d2 = cols[1].text_input("‡∏´‡∏•‡∏±‡∏Å‡∏£‡πâ‡∏≠‡∏¢", max_chars=1)
d3 = cols[2].text_input("‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏¥‡∏ö", max_chars=1)
d4 = cols[3].text_input("‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢", max_chars=1)

if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 1 ‡∏á‡∏ß‡∏î"):
    if all([d.isdigit() for d in [d1, d2, d3, d4]]):
        st.session_state.lao_lotto.append(d1 + d2 + d3 + d4)
        st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß")
    else:
        st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏´‡∏•‡∏±‡∏Å")

if st.button("üóëÔ∏è ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"):
    if st.session_state.lao_lotto:
        st.session_state.lao_lotto.pop()
        st.success("üßπ ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß")

# üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
if st.session_state.lao_lotto:
    df = pd.DataFrame(st.session_state.lao_lotto, columns=["‡πÄ‡∏•‡∏Ç 4 ‡∏´‡∏•‡∏±‡∏Å"])
    st.dataframe(df)

    last_1 = st.session_state.lao_lotto[-1]
    last_2 = st.session_state.lao_lotto[-2] if len(st.session_state.lao_lotto) >= 2 else ""
    last_3 = st.session_state.lao_lotto[-3] if len(st.session_state.lao_lotto) >= 3 else ""

    flow = [d for d in last_1 if d in last_2]
    cross = [d for d in last_1 if d in last_3]
    recent_10 = st.session_state.lao_lotto[-10:]
    all_digits = "".join(recent_10)
    freq_all = Counter(all_digits).most_common()
    most_freq = freq_all[0][0] if freq_all else "-"
    missing = [d for d in "0123456789" if d not in "".join(st.session_state.lao_lotto[-5:])]
    random_digit = str(random.choice("0123456789"))

    st.subheader("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á")
    st.markdown(f"**1. ‡πÄ‡∏•‡∏Ç‡πÑ‡∏´‡∏•:** {' '.join(flow) if flow else '‡πÑ‡∏°‡πà‡∏°‡∏µ'}")
    st.markdown(f"**2. ‡πÄ‡∏•‡∏Ç‡∏Ç‡πâ‡∏≤‡∏°‡∏á‡∏ß‡∏î:** {' '.join(cross) if cross else '‡πÑ‡∏°‡πà‡∏°‡∏µ'}")
    st.markdown(f"**3. ‡πÄ‡∏•‡∏Ç‡∏ã‡πâ‡∏≥‡∏ö‡πà‡∏≠‡∏¢ (10 ‡∏á‡∏ß‡∏î):** {freq_all}")
    st.markdown(f"**4. ‡πÄ‡∏•‡∏Ç‡∏´‡∏≤‡∏¢‡∏ô‡∏≤‡∏ô (5 ‡∏á‡∏ß‡∏î):** {', '.join(missing)}")
    st.markdown(f"**5. ‡πÄ‡∏•‡∏Ç‡∏™‡∏∏‡πà‡∏°:** {random_digit}")

    # üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    st.subheader("üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ")
    digit = most_freq
    pairs = [f"{digit}{(int(digit)+i)%10}" for i in range(1, 5)]
    lead_pair = random.choice(pairs)
    triple = [f"{lead_pair[0]}{lead_pair[1]}{i}" for i in range(10)]
    triple_random = f"{random.randint(0,9)}{digit}{random.randint(0,9)}"
    quad = f"{random.randint(1,9)}{digit}{random.randint(0,9)}{random.randint(0,9)}"

    st.markdown(f"<h2 style='color:red;'>‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πà‡∏ô: {digit}</h2>", unsafe_allow_html=True)
    st.markdown(f"<h3 style='color:red;'>‡πÄ‡∏•‡∏Ç‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {', '.join(pairs)}</h3>", unsafe_allow_html=True)
    st.markdown(f"<h4 style='color:red;'>‡πÄ‡∏•‡∏Ç‡∏•‡∏≤‡∏Å‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß: {' '.join(triple)}</h4>", unsafe_allow_html=True)
    st.markdown(f"<h4 style='color:red;'>‡πÄ‡∏•‡∏Ç‡πÄ‡∏™‡∏µ‡∏¢‡∏ß‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß: {triple_random}</h4>", unsafe_allow_html=True)
    st.markdown(f"<h4 style='color:red;'>‡πÄ‡∏•‡∏Ç‡πÇ‡∏ä‡∏Ñ‡∏™‡∏µ‡πà‡∏ï‡∏±‡∏ß: {quad}</h4>", unsafe_allow_html=True)

else:
    st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏á‡∏ß‡∏î")
